name: Run e2e with pw

on:
  push:
  pull_request: # Pull request triggers for the burn-in
  workflow_dispatch:

# If this branch is pushed back-to-back, cancel the older branch's workflow
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  pw-burn-in:
    # Run this only on PRs, so we actually have a 'base ref' to compare against
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          # Must fetch full history so that --only-changed works correctly.
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Detect changed E2E test files
        id: detect-changed
        run: |
          # We'll compare PR's HEAD to base ref. "github.base_ref" is typically "main" or whatever your PR merges into.
          git fetch origin ${{ github.base_ref }} --depth=1
          changed_files=$(git diff --name-only origin/${{ github.base_ref }} HEAD)

          echo "==== Changed files detected ===="
          echo "$changed_files"

          # Check if anything in the 'pw/' folder changed,
          # especially .spec.ts or .test.ts files. Adjust the pattern as needed.
          if echo "$changed_files" | grep -E '^pw/.*\.(spec|test)\.ts'; then
            echo "found_changed=true" >> $GITHUB_ENV
          else
            echo "found_changed=false" >> $GITHUB_ENV
          fi

      - name: Skip burn-in if no E2E files changed
        if: env.found_changed == 'false'
        run: |
          echo "No E2E test files changed. Skipping burn-in step."
          # We'll exit right away, so the remaining steps won't run.
          exit 0

      - name: Read Node version from .nvmrc
        if: env.found_changed == 'true'
        id: node_version
        run: echo "NODE_VERSION=$(cat .nvmrc)" >> $GITHUB_ENV

      - name: Setup Node
        if: env.found_changed == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Cache Playwright Browsers
        if: env.found_changed == 'true'
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: playwright-${{ runner.os }}-${{ github.sha }}
          restore-keys: |
            playwright-${{ runner.os }}-

      - name: Install dependencies
        if: env.found_changed == 'true'
        run: npm ci

      - name: Install Playwright Chromium Only
        if: env.found_changed == 'true'
        run: npx playwright install chromium

      - name: Burn-in changed Playwright tests (repeat 5 times, no retries)
        if: env.found_changed == 'true'
        run: |
          npx playwright test \
            --only-changed=${{ github.base_ref }} \
            --repeat-each=5 \
            --retries=0 \
            --pass-with-no-tests

  pw-e2e:
    # This job depends on the burn-in finishing (or being skipped), so we allow it to proceed either way.
    needs: [pw-burn-in]
    strategy:
      fail-fast: false
      matrix:
        shardIndex: [1, 2, 3, 4]
        shardTotal: [4]
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          # For PRs, still check out the PR head. For merges to main (push), this is also valid.
          ref: ${{ github.event.pull_request.head.sha || github.ref }}

      - name: Read Node version from .nvmrc
        id: node_version
        run: echo "NODE_VERSION=$(cat .nvmrc)" >> $GITHUB_ENV

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Cache Playwright Browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: playwright-${{ runner.os }}-${{ github.sha }}
          restore-keys: |
            playwright-${{ runner.os }}-

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Chromium Only
        run: npx playwright install chromium

      - name: Run PW e2e tests (sharded)
        run: npx playwright test --shard=${{ matrix.shardIndex }}/${{ matrix.shardTotal }}

      - name: Copy trace files to blob-report
        run: |
          mkdir -p blob-report/trace
          cp -r test-results/**/*.zip blob-report/trace || true

      - name: Upload shard blob report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: blob-report-${{ matrix.shardIndex }}
          path: blob-report
          retention-days: 3

  merge-reports:
    needs: pw-e2e
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Download shard reports
        uses: actions/download-artifact@v4
        with:
          path: all-blob-reports
          pattern: blob-report-*
          merge-multiple: true

      - name: Merge Playwright reports
        run: |
          mkdir -p playwright-report/trace
          cp -r all-blob-reports/*/trace/* playwright-report/trace || true
          npx playwright merge-reports --reporter=html all-blob-reports

      - name: Upload merged report
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report
          retention-days: 3
