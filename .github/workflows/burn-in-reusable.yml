name: 'Burn-in reusable workflow'

on:
  workflow_call:
    outputs:
      runE2E:
        description: 'Whether to run E2E tests'
        value: ${{ jobs.rwf.outputs.runE2E }}
    inputs:
      base-ref:
        type: string
        description: 'Base ref to compare changed files with HEAD'
        required: false
        default: 'main'

jobs:
  rwf:
    runs-on: ubuntu-latest

    outputs:
      runE2E: ${{ steps.set-runE2E.outputs.runE2E }}

    steps:
      # 1) Minimal checkout to detect changes
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Detect changed E2E test files
        id: detect-changed
        run: |
          # Compare HEAD with the "base-ref" branch
          git fetch origin ${{ inputs.base-ref }} --depth=1
          changed_files=$(git diff --name-only origin/${{ inputs.base-ref }} HEAD)

          echo "Changed files:"
          echo "$changed_files"

          # We'll store 'true' or 'false' in an env var
          if echo "$changed_files" | grep -Eq '^pw/.*\.(spec|test)\.ts'; then
            echo "found_changed=true" >> $GITHUB_ENV
          else
            echo "found_changed=false" >> $GITHUB_ENV
          fi

      # 2) If no files changed, set runE2E = true (so the main E2E can still run),
      #    then exit immediately so we don't do any installs or burn-in.
      - name: Skip burn-in if no E2E changes
        id: skip-if-none
        run: |
          if [ "${{ env.found_changed }}" = "false" ]; then
            echo "runE2E=true" >> $GITHUB_OUTPUT
            echo "No E2E test files changed => skipping burn-in, but E2E can still proceed."
            exit 0
          fi

      # 3) If we got here, we have changed test files => do burn-in.
      - name: Read Node version from .nvmrc
        run: echo "NODE_VERSION=$(cat .nvmrc)" >> $GITHUB_ENV

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright (Chromium only)
        run: npx playwright install chromium

      - name: Run Burn-in
        id: burnin-step
        run: |
          echo "Found changed E2E files. Running burn-in..."
          # Ensure local branch "main" tracks origin/main
          git branch -f main origin/main

          npx playwright test \
            --only-changed=main \
            --repeat-each=5 \
            --retries=0

      - name: Decide if we run E2E or not
        id: set-runE2E
        run: |
          if [ "${{ steps.burnin-step.outcome }}" = "failure" ]; then
            echo "Burn-in failed => We'll skip E2E."
            echo "runE2E=false" >> $GITHUB_OUTPUT
          else
            echo "Burn-in succeeded => we do E2E."
            echo "runE2E=true" >> $GITHUB_OUTPUT
          fi
